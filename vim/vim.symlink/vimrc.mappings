" vim:fdm=marker

" Global {{{

" Quick save
nnoremap <Leader>w :w<CR>

" Creates a new line on an ordered list while on insert mode
inoremap <C-j> <esc>yyp0wwd$:.,$g/^\d/exe "normal! \<C-a>"<CR>A

" Avoid q:
map q: :q

" Duplicate lines
nnoremap <leader>d YP`[v`]<esc>l
vnoremap <leader>d YP`[v`]<esc>l

" Working with Vim config files
nnoremap <leader>vm :split $VIM_MAPPINGS_PATH<cr>
nnoremap <leader>vo :split $VIM_OPTIONS_PATH<cr>
nnoremap <leader>vu :split $VIM_UTILS_PATH<cr>
nnoremap <leader>vb :split $VIM_BUNDLES_PATH<cr>
nnoremap <leader>vs :source $MYVIMRC<cr>

" Sane up and down
nnoremap j gj
nnoremap k gk

" Reselect after indent
vnoremap < <gv
vnoremap > >gv

" Keep search results at the center of the screen
nnoremap <silent> n nzz<Plug>PulseCursorLine
nnoremap <silent> N Nzz<Plug>PulseCursorLine
nnoremap <silent> * *zz<Plug>PulseCursorLine
nnoremap <silent> # #zz<Plug>PulseCursorLine
nnoremap <silent> g* g*zz<Plug>PulseCursorLine

" Clean whitespace
nnoremap <silent> <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>

" Same indentation movement
if exists('*IndentTextObject')
	onoremap ii :<c-u>call IndentTextObject()<cr>
	xnoremap ii :<c-u>call IndentTextObject()<cr>

	xnoremap ai :<c-u>call IndentTextObject()<cr>
	onoremap аi :<c-u>call IndentTextObject()<cr>
endif

" Paste
nnoremap <Leader>p :set paste<CR>o<esc>"*]p:set nopaste<cr>

" Fill line
map <leader>f :Fill 
command -nargs=1 Fill :exe ":call FillLine('<args>')"

" Select last pasted text
nnoremap <expr> gb '`[' . strpart(getregtype(), 0, 1) . '`]'
" }}}
" Toggles {{{

" Search Highlight
nnoremap <leader>h :set hls! <cr>

" }}}
" Notes {{{
map <leader>n :e! $NOTES_FOLDER<CR>
map <leader>m :Note 
map <leader>0 :NoteList 
command -nargs=1 Note :exe "e! " . $NOTES_FOLDER . "/" . fnameescape("<args>.md")
command -nargs=1 NoteList :grep "<args>" $NOTES_FOLDER
" }}}
" CoffeeScript {{{

" Function movement
if exists('*FunctionTextObject')
	onoremap if :<c-u>call FunctionTextObject('i')<cr>
	xnoremap if :<c-u>call FunctionTextObject('i')<cr>

	xnoremap af :<c-u>call FunctionTextObject('a')<cr>
	onoremap аf :<c-u>call FunctionTextObject('a')<cr>
endif

" Compile CoffeeScript on current buffer or selection and show
" resulting Javascript on a new buffer
if exists('*CoffeeCompile')
	vnoremap <leader>c <esc>:'<,'>:CoffeeCompile<CR>
	nnoremap <leader>c :CoffeeCompile<CR>
endif

" }}}
